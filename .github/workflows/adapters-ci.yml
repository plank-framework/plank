name: Adapters CI Matrix

on:
  push:
    branches: [main, develop]
    paths:
      - 'packages/adapters/**'
      - '.github/workflows/adapters-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'packages/adapters/**'
      - '.github/workflows/adapters-ci.yml'

jobs:
  # Node.js Adapter Tests
  node-adapter:
    name: Node.js Adapter
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build --filter="@plank/adapter-node"

      - name: Run tests
        run: pnpm test --filter="@plank/adapter-node"

      - name: Type check
        run: pnpm type-check --filter="@plank/adapter-node"

      - name: Lint
        run: pnpm lint --filter="@plank/adapter-node"

  # Bun Adapter Tests
  bun-adapter:
    name: Bun Adapter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build packages
        run: bun run build --filter="@plank/adapter-bun"

      - name: Run unit tests (Node.js)
        run: bun run test --filter="@plank/adapter-bun"

      - name: Run integration tests (Bun)
        run: cd packages/adapters/bun && bun test test-bun.test.js

      - name: Type check
        run: bun run type-check --filter="@plank/adapter-bun"

      - name: Lint
        run: bun run lint --filter="@plank/adapter-bun"

  # Edge Adapter Tests (Cloudflare Workers)
  edge-adapter:
    name: Edge Adapter (Workers)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build --filter="@plank/adapter-edge"

      - name: Run tests
        run: pnpm test --filter="@plank/adapter-edge"

      - name: Type check
        run: pnpm type-check --filter="@plank/adapter-edge"

      - name: Lint
        run: pnpm lint --filter="@plank/adapter-edge"

      - name: Test with Wrangler (if available)
        run: |
          if command -v wrangler &> /dev/null; then
            cd packages/adapters/edge
            wrangler dev --dry-run
          else
            echo "Wrangler not available, skipping deployment test"
          fi
        continue-on-error: true

  # Deno Adapter Tests
  deno-adapter:
    name: Deno Adapter
    runs-on: ubuntu-latest
    strategy:
      matrix:
        deno-version: [1.40, latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno ${{ matrix.deno-version }}
        uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js (for pnpm)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build --filter="@plank/adapter-deno"

      - name: Run unit tests (Node.js)
        run: pnpm test --filter="@plank/adapter-deno"

      - name: Run integration tests (Deno)
        run: cd packages/adapters/deno && deno test --allow-net --allow-read test-deno.test.js

      - name: Type check
        run: pnpm type-check --filter="@plank/adapter-deno"

      - name: Lint
        run: pnpm lint --filter="@plank/adapter-deno"

  # Cross-runtime compatibility tests
  cross-runtime:
    name: Cross-Runtime Compatibility
    runs-on: ubuntu-latest
    needs: [node-adapter, bun-adapter, edge-adapter, deno-adapter]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all adapters
        run: pnpm build --filter="@plank/adapter-*"

      - name: Test adapter exports
        run: |
          echo "Testing adapter exports..."
          node -e "
            const nodeAdapter = require('./packages/adapters/node/dist/index.js');
            const bunAdapter = require('./packages/adapters/bun/dist/index.js');
            const edgeAdapter = require('./packages/adapters/edge/dist/index.js');
            const denoAdapter = require('./packages/adapters/deno/dist/index.js');

            console.log('âœ… All adapters built successfully');
            console.log('Node adapter:', typeof nodeAdapter.createNodeAdapter);
            console.log('Bun adapter:', typeof bunAdapter.createBunAdapter);
            console.log('Edge adapter:', typeof edgeAdapter.createEdgeAdapter);
            console.log('Deno adapter:', typeof denoAdapter.createDenoAdapter);
          "

      - name: Run full test suite
        run: pnpm test --filter="@plank/adapter-*"

  # Performance benchmarks
  benchmarks:
    name: Adapter Benchmarks
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build --filter="@plank/adapter-*"

      - name: Run benchmarks
        run: |
          echo "Running adapter benchmarks..."
          # Node adapter benchmarks
          cd packages/adapters/node && pnpm test:bench 2>/dev/null || echo "No benchmarks configured"

          # Bun adapter benchmarks
          cd ../bun && pnpm test:bench 2>/dev/null || echo "No benchmarks configured"

          # Deno adapter benchmarks
          cd ../deno && pnpm test:bench 2>/dev/null || echo "No benchmarks configured"
        continue-on-error: true

  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Check for known vulnerabilities
        run: |
          echo "Checking adapter packages for vulnerabilities..."
          pnpm audit --filter="@plank/adapter-*" --audit-level moderate
